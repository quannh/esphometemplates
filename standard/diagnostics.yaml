# NOTE: This file is not a stand-alone package. It is part of
# a 'root' device template and expects the substitutions that
# are hereby referenced to be defined by its parent.

substitutions:
  log_level: INFO
  timezone: Asia/Ho_Chi_Minh
  # timezone: "America/Mexico_City"

# Enable logging via network and disable serial port
logger:
  level: "${log_level}"
  baud_rate: 0

# Provide date and time
time:
  - platform: sntp
    id: time_service
    timezone: ${timezone}

# Diagnostic output sensors
text_sensor:

  - platform: wifi_info
    ip_address:
      id: ip_address
      name: "IP Address"
      icon: "mdi:wan"

  - platform: template
    name: "Uptime"
    id: uptime_human
    icon: mdi:clock-start
    update_interval: 60s
    entity_category: "diagnostic"

# Diagnostic Output Sensors
sensor:
  - platform: wifi_signal
    name: "RSSI"
    id: sensor_rssi
    update_interval: 90s
    entity_category: "diagnostic"

  - platform: uptime
    name: "Uptime"
    id: sensor_uptime
    update_interval: 60s
    entity_category: "diagnostic"
    internal: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(sensor_uptime).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();

# Provide a pre-built button for restarting the device
button:
  - platform: restart
    name: "Restart"
    id: button_restart
